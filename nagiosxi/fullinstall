#!/bin/sh -e

# Set up system variables
./init.sh
. ./xi-sys.cfg

# Explicitly set umask
umask 0022

# Install log
log="install.log"

# Installation is interactive by default
export INTERACTIVE="True"

usage() {
	fmt -s -w $(tput cols) <<-EOF

		Nagios XI installer script
		Copyright 2009-2012, Nagios Enterprises LLC.
		License:
		    Nagios Software License <http://assets.nagios.com/licenses/nagios_software_license.txt>
		Support:
		    XI Support Mailing List <xisupport@nagios.com> (customers only)
		    Community Forums <http://support.nagios.com/forum/>

		Usage: fullinstall [options...]

		Options:
		    -h | --help
		        Display this help text
		    -n | --non-interactive
		        Assume defaults for all questions (for scripted installs)
		    -p | --mysql-password
		        Specify custom MySQL root password.
		    -v | --version
		        Show the version of XI to be installed (and existing version, for upgrades)

		IMPORTANT: This script should only be used on a 'clean' install of CentOS or RedHat.  Do NOT use this on a system that has been tasked with other purposes or has an existing install of Nagios Core.  To create such a clean install you should have selected ONLY the 'Base' package in the OS installer.

	EOF
}

# Wrapper function for installation scripts
run_sub() {
	echo "Running '$1'..."

	# Run the command and copy output to installer log
	# Fail file is a portable bourne shell alternative to $PIPESTATUS
	FAILFILE=".fail-$$"
	rm -f "$FAILFILE"
	(eval "$@" 2>&1 || echo $? > "$FAILFILE") | tee -a "$log"
	echo "RESULT=$(cat "$FAILFILE" 2>/dev/null || echo 0)"
	if [ -f "$FAILFILE" ]; then
		cat >&2 <<-EOF

			===================
			INSTALLATION ERROR!
			===================
			Installation step failed - exiting.
			Check for error messages in the install log (install.log).

			If you require assistance in resolving the issue, please include install.log
			in your communications with Nagios XI technical support.

			The script that failed was: '$1'
		EOF
		exit 1
	fi
	rm -f "$FAILFILE"
}

# Check that /sbin & /usr/sbin are in $PATH
path_is_ok() {
	echo "$PATH" \
	| awk 'BEGIN{RS=":"} {p[$0]++} END{if (p["/sbin"] && p["/usr/sbin"]) exit(0); exit(1)}'
}

# Check that XI is installing from /tmp
if [ $(pwd) != /tmp/nagiosxi ]; then
	echo "ERROR: Nagios XI must be installed from /tmp" >&2
	echo "Extract the source into /tmp and run it from there" >&2
	exit 1
fi

if ! path_is_ok; then
	echo "Your system \$PATH does not include /sbin and /usr/sbin. This is usually the result of installing GNOME rather than creating a clean system."
	echo "Adding /sbin and /usr/sbin to \$PATH."
	PATH="$PATH:/usr/sbin:/sbin"
fi

# Parse command line
while [ -n "$1" ]; do
	case "$1" in
		-h | --help)
			usage
			exit 0
			;;
		-v | --version)
			sed -n '/full/ s/.*=//p' "${0%/*}/nagiosxi/basedir/var/xiversion"
			exit 0
			;;
		-n | --non-interactive)
			export INTERACTIVE="False"
			;;
		-p | --mysql-password)
			mysqlpass="$2"
			./xivar mysqlpass "$2"
			shift
			;;
		*)
			echo "Unknown option:  $1" >&2
			usage >&2
			exit 1
	esac
	shift
done

if [ "$INTERACTIVE" = "True" ]; then
	fmt -s -w $(tput cols) <<-EOF
		========================
		Nagios XI Full Installer
		========================

		This script will do a complete install of Nagios XI by executing all necessary sub-scripts.

		IMPORTANT: This script should only be used on a 'clean' install of CentOS or RedHat.  Do NOT use this on a system that has been tasked with other purposes or has an existing install of Nagios Core.  To create such a clean install you should have selected ONLY the 'Base' package in the OS installer.
	EOF
	read -p "Do you want to continue? [Y/n] " res

	case "$res" in
		Y | y | "")
			echo "Proceeding with installation..."
			;;
		*)
			echo "Installation cancelled"
			exit 0
	esac
fi

echo "Checking MySQL credentials..."

# Check Mysql root password if MySQL is already installed and running...
if service mysqld status &>/dev/null; then
	# Test for null MySQL root password
	if mysqlshow -u root &>/dev/null; then
		echo "After installation your MySQL root password will be set to 'nagiosxi' (without quotes)."
	elif mysqlshow -u root -p"$mysqlpass" &>/dev/null; then
		echo "Stored MySQL password validated."
	else
		for i in 1 2 3; do
			if [ "$INTERACTIVE" = "True" ]; then
				echo "Enter the MySQL root password to continue..."
				read -p "MySQL Root Password: " pass
			fi

			# Test the password
			if mysqlshow -u root -p"$pass" &>/dev/null; then
				echo "Password validated."
				mysqlpass="$pass"

				# Update xi-sys.cfg with MySQL password for later use by subcomponent install
				if ! ./xivar mysqlpass "$mysqlpass"; then
					echo "ERROR: Failed to update xi-sys.cfg with MySQL password - exiting." >&2
					exit 1
				fi			

				break
			else
				echo "Password failed." >&2
				[ $i -eq 3 ] && exit 1
			fi
		done
	fi
else
	echo "MySQL not yet installed - that's okay."
fi

# Initialize install.log
cat >>"$log" <<-EOF
	Nagios XI Installation Log
	==========================
	DATE: $(date)

	DISTRO INFO:
	$distro
	$version
	$architecture

EOF

{
if [ ! -f /usr/local/nagiosxi/var/xiversion ]; then
	echo "THIS IS A NEW INSTALL!"
else
	echo "THIS IS AN UPGRADE!"
	echo
	echo "OLD VERSION:"
	grep -v "#" /usr/local/nagiosxi/var/xiversion
fi
echo
echo "INSTALLING:"
grep -v "#" nagiosxi/basedir/var/xiversion
echo
} >>"$log"


# Install the subcomponents
run_sub ./0-yum noupdate
run_sub ./1-prereqs
run_sub ./2-usersgroups
run_sub ./3-dbservers
run_sub ./4-services
run_sub ./5-sudoers
run_sub ./6-firewall
run_sub ./7-sendmail
run_sub ./8-selinux
run_sub ./9-dbbackups
run_sub ./10-phplimits
run_sub ./11-sourceguardian
run_sub ./12-mrtg
run_sub ./13-cacti
run_sub ./14-timezone
run_sub ./A-subcomponents
run_sub ./B-installxi
run_sub ./C-cronjobs
run_sub ./D-chkconfigalldaemons
run_sub ./E-importnagiosql
run_sub ./F-startdaemons
run_sub ./Z-webroot

echo >>"$log"
echo "Install complete!" >>"$log"

ip=$(ifconfig eth0 | awk '/inet[^6]/{print substr($2,6)}')

cat <<-EOF

	Nagios XI Installation Complete!

	You can access the Nagios XI web interface by visiting:
	    http://${ip}/nagiosxi/

EOF

